 int st[]={input1,input2,input3,input4,input5};
        int s=0,us=0,diff=0;
        for(int i=0;i<st.length;i++)
        {
        if(isstable(st[i]))
        {
            s=s+st[i];
        }
        else
        {
            us=us+st[i];
        }
        }
        diff=s-us;
        return diff;
        //throw new UnsupportedOperationException("findPassword(int input1,int input2,int input3,int input4,int input5)");
	
    }

    public boolean isstable(int n)
    {
        HashMap<Integer,Integer> mp=new HashMap<>();
        int no=n%10,r;
 
        while(n!=0)
        {
            r=n%10;
            if(mp.containsKey(r)) mp.put(r,mp.get(r)+1);
            else mp.put(r,1);
            n=n/10;
        }

        for(int i:mp.keySet())
        {
            if(mp.get(no)!=mp.get(i)) return false;
        }
        return true;
    }
}
